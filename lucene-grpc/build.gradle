/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'

    // For generating protobuf files
    id 'com.google.protobuf' version '0.8.18'

    // Generate idea project
    id 'idea'
}

description = 'Analyzer that calls external services via GRPC'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

configurations {
    // configuration that holds jars to include in the jar
    inJar
}

def grpcVersion = '1.45.1'
def protobufVersion = '3.19.2'
def protocVersion = protobufVersion

dependencies {
    // These dependencies are not needed during run-time, since they will already be loaded
    api 'org.apache.lucene:lucene-core:9.2.0'
    api 'org.slf4j:slf4j-api:2.0.0-alpha7'

    // GRPC dependencies need to have included implementations
    inJar "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    inJar "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    compileOnly "org.apache.tomcat:annotations-api:6.0.53"
    inJar "io.grpc:grpc-netty-shaded:${grpcVersion}"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
        proto {
            // In addition to the default 'src/main/proto'
            srcDir '../proto'
        }
    }
}

jar {
    from {
        configurations.inJar.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
